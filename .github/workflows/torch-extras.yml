on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
      base-image:
        required: true
        type: string
      skip-bases-check:
        required: false
        type: boolean
        default: true

  workflow_dispatch:
    inputs:
      tag:
        required: false
        description: "Tag suffix to identify the build"
        type: string
      base-image:
        required: false
        description: "Base image for the build"
        type: string
      skip-bases-check:
        required: false
        type: boolean
        default: true

  push:
    paths:
      - "torch-extras/**"
      - ".github/workflows/torch-extras.yml"
      - ".github/workflows/build.yml"


jobs:
  get-required-bases:
    if: github.event_name == 'push' && !inputs.skip-bases-check
    runs-on: ["self-hosted", "Linux"]
    permissions:
      packages: read
    outputs:
      bases-list: ${{ steps.choose-bases.outputs.list }}
    steps:
      - uses: actions/checkout@v3
      - name: check-changed
        run: |
          CHANGED_FILES="$(git diff --name-only "$BEFORE_HASH" "$AFTER_HASH")" && \
          { \
            echo "$CHANGED_FILES" \
            | grep -P '^(\./)?(torch/|\.github/workflows/torch(-base)?\.yml|\.github/workflows/build\.yml)' > /dev/null \
              && echo "BASE_PROVIDED=true" >> $GITHUB_OUTPUT \
              || echo "BASE_PROVIDED=false" >> $GITHUB_OUTPUT; \
          } && { \
            echo "$CHANGED_FILES" \
            | grep -P '^(\./)?(torch/|\.github/workflows/torch(-nccl)?\.yml|\.github/workflows/build\.yml)' > /dev/null \
              && echo "NCCL_PROVIDED=true" >> $GITHUB_OUTPUT \
              || echo "NCCL_PROVIDED=false" >> $GITHUB_OUTPUT; \
          }
        env:
          BEFORE_HASH: ${{ github.event.before }}
          AFTER_HASH: ${{ github.event.after }}
      - name: get-latest
        run: |
          RELEASES="$( \
            /bin/curl -f -s --oauth2-bearer "$(echo "$BEARER_TOKEN" | base64 -w 0)" \
              https://ghcr.io/v2/coreweave/ml-containers%2Ftorch/tags/list \
            | jq -r '.["tags"][]' \
            | grep -E '^[0-9a-f]{7}-(base|nccl)-' \
          )" && \
          BASE_RELEASES="$(echo "$RELEASES" | grep -E '^[0-9a-f]{7}-base-')" && \
          NCCL_RELEASES="$(echo "$RELEASES" | grep -E '^[0-9a-f]{7}-nccl-')" && \
          LATEST_BASE_COMMIT="$(echo "$BASE_RELEASES" | tail -1 | cut -c1-7)" && \
          LATEST_NCCL_COMMIT="$(echo "$NCCL_RELEASES" | tail -1 | cut -c1-7)" && \
          LATEST_BASE_IMAGES="$(echo "$BASE_RELEASES" | grep -F "${LATEST_BASE_COMMIT}-")" && \
          LATEST_NCCL_IMAGES="$(echo "$NCCL_RELEASES" | grep -F "${LATEST_NCCL_COMMIT}-")" && \
          echo "LATEST_BASE_IMAGES=\"$LATEST_BASE_IMAGES\"" >> $GITHUB_OUTPUT && \
          echo "LATEST_NCCL_IMAGES=\"$LATEST_NCCL_IMAGES\"" >> $GITHUB_OUTPUT
        env:
          BEARER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: choose-bases
        run: |
          TAG_PATTERN='^[0-9a-f]{7}-(.*)' && \
          JSON_REPLACE='{"tag":"\1","image":"ghcr.io/coreweave/ml-containers/torch:\0"}' && \
          TAG_TO_JSON() { sed -E -e "s@${TAG_PATTERN}@${JSON_REPLACE}@g"; }
          SPLIT_TO_LINES() { xargs -n 1; } && \
          JOIN_LINES() { tr '[:space:]' ',' | sed -e 's/,$//'; } && \
          echo "list=[$( \
            ( \
              if [ "$BASE_PROVIDED" = 'false' ]; then \
                echo "$LATEST_BASE_IMAGES"; \
              fi && \
              if [ "$NCCL_PROVIDED" = 'false' ]; then \
                echo "$LATEST_NCCL_IMAGES"; \
              fi; \
            ) | SPLIT_TO_LINES | TAG_TO_JSON | JOIN_LINES \
          )]" >> $GITHUB_OUTPUT;
        env:
          BASE_PROVIDED: ${{ steps.check-changed.outputs.BASE_PROVIDED }}
          NCCL_PROVIDED: ${{ steps.check-changed.outputs.NCCL_PROVIDED }}
          LATEST_BASE_IMAGES: ${{ steps.get-latest.outputs.LATEST_BASE_IMAGES }}
          LATEST_NCCL_IMAGES: ${{ steps.get-latest.outputs.LATEST_NCCL_IMAGES }}

  build-call:
    if: inputs.skip-bases-check
    strategy:
      matrix:
        flash-attn: [ 2.0.2, 1.0.9 ]
    uses: ./.github/workflows/build.yml
    with:
      image-name: torch-extras
      folder: torch-extras
      tag-suffix: ${{ inputs.tag }}-flash_attn${{ matrix.flash-attn }}
      large-runner: false
      build-args: |
        BASE_IMAGE=${{ inputs.base-image }}
        FLASH_ATTN_VERSION=${{ matrix.flash-attn }}

  build-self:
    needs: get-required-bases
    if: needs.get-required-bases.outputs.bases-list && needs.get-required-bases.outputs.bases-list != '[]'
    strategy:
      matrix:
        flash-attn: [ 2.0.2, 1.0.9 ]
        bases: ${{ fromJSON(needs.get-required-bases.outputs.bases-list) }}
    uses: ./.github/workflows/build.yml
    with:
      image-name: torch-extras
      folder: torch-extras
      tag-suffix: ${{ matrix.bases.tag }}-flash_attn${{ matrix.flash-attn }}
      large-runner: false
      build-args: |
        BASE_IMAGE=${{ matrix.bases.image }}
        FLASH_ATTN_VERSION=${{ matrix.flash-attn }}
